{"version":3,"file":"static/js/135.181c0acb.chunk.js","mappings":"sSAEMA,E,MAASC,GAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAW,mCAAG,sGACFL,EAAOM,IAAI,uBADT,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKXC,EAAa,mCAAG,WAAMC,GAAN,uFACJV,EAAOM,IAAP,iBAAqBI,IADjB,cACrBC,EADqB,yBAEpBA,EAASJ,MAFW,2CAAH,sDAKbK,EAAS,mCAAG,WAAMT,GAAN,yFACAH,EAAO,gBAAiB,CAAEG,OAAQA,IADlC,uBACfI,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,sDAKTM,EAAa,mCAAG,WAAMH,GAAN,yFACJV,EAAO,UAAD,OAAWU,EAAX,aADF,uBACnBH,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbO,EAAc,mCAAG,WAAMJ,GAAN,yFACLV,EAAOM,IAAP,iBAAqBI,EAArB,aADK,uBACpBH,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qD,+IC5B3B,EAAwB,4BAAxB,EAA4D,4BAA5D,EAA+F,2BAA/F,EAAsI,gCAAtI,EAA6K,2B,SCwE7K,EAnEqB,WAAO,IAAD,UACzB,GAAkCQ,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MAYjB,OAVAC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CACA,IAAMK,EAAQ,mCAAG,qGACId,EAAAA,EAAAA,IAAcS,GADlB,OACTX,EADS,OAEfU,EAAaV,GAFE,2CAAH,qDAKdgB,GANoB,CAOrB,GAAE,CAACL,KAGF,iCACE,SAAC,KAAD,CAAMM,GAAE,oBAAEJ,EAASK,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,sBAEA,yBACGV,IACC,4BACE,eAAIW,UAAWC,EAAf,SAA2BZ,EAAUa,kBACrC,wBAAKb,EAAUc,gBACf,gBACEH,UAAWC,EACXG,IAAG,yCAAoCf,EAAUgB,aACjDC,MAAM,QACNC,IAAK,aAGP,eAAGP,UAAWC,EAAd,wBAAoCZ,EAAUmB,eAC9C,eAAIR,UAAWC,EAAf,wBACA,cAAGD,UAAWC,EAAd,SAAyBZ,EAAUoB,YACnC,eAAIT,UAAWC,EAAf,qBACA,cAAGD,UAAWC,EAAd,gBACGZ,QADH,IACGA,GADH,UACGA,EAAWqB,cADd,aACG,EAAmBC,KAAI,SAAAC,GAAK,OAC3B,eAAIZ,UAAWC,EAAf,SACGW,EAAMC,MADqBD,EAAM7B,GADT,OAM/B,cAAGiB,UAAWC,EAAd,qCAEA,2BACE,eAAID,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMJ,GAAG,OAAOC,MAAO,CAAEC,KAAI,OAAEN,QAAF,IAAEA,GAAF,UAAEA,EAAUK,aAAZ,aAAE,EAAiBC,MAAhD,qBAKF,eAAIC,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMJ,GAAG,UAAUC,MAAO,CAAEC,KAAI,OAAEN,QAAF,IAAEA,GAAF,UAAEA,EAAUK,aAAZ,aAAE,EAAiBC,MAAnD,2BAKJ,SAAC,EAAAe,SAAD,WACE,SAAC,KAAD,aAOb,C","sources":["helpers/Api.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst getApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'e3af40ecaabe4a8543be52bceceba996',\n  },\n});\n\nexport const getTrending = async () => {\n  const { data } = await getApi.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const getMoviesById = async id => {\n  const response = await getApi.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const searchApi = async params => {\n  const { data } = await getApi('/search/movie', { params: params });\n  return data;\n};\n\nexport const movieCastsApi = async id => {\n  const { data } = await getApi(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const movieReviewApi = async id => {\n  const { data } = await getApi.get(`/movie/${id}/reviews`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MovieDetails_title__cUGs9\",\"image\":\"MovieDetails_image__c1FeV\",\"text\":\"MovieDetails_text__RHcc4\",\"titleText\":\"MovieDetails_titleText__61J0Y\",\"list\":\"MovieDetails_list__dbNMP\"};","import React, { Suspense } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMoviesById } from '../../helpers/Api';\nimport { useEffect, useState } from 'react';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movieItem, setMovieItem] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const getMovie = async () => {\n      const data = await getMoviesById(movieId);\n      setMovieItem(data);\n    };\n\n    getMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={location.state?.from ?? '/'}>Go back</Link>\n\n      <div>\n        {movieItem && (\n          <div>\n            <h1 className={css.title}>{movieItem.original_title}</h1>\n            <h2>{movieItem.release_data}</h2>\n            <img\n              className={css.image}\n              src={`https://image.tmdb.org/t/p/w500${movieItem.poster_path}`}\n              width=\"500px\"\n              alt={'The Car'}\n            />\n\n            <p className={css.text}>User score:{movieItem.popularity}</p>\n            <h2 className={css.titleText}>Overview </h2>\n            <p className={css.text}>{movieItem.overview}</p>\n            <h2 className={css.titleText}>Genres</h2>\n            <p className={css.text}>\n              {movieItem?.genres?.map(genre => (\n                <li className={css.list} key={genre.id}>\n                  {genre.name}\n                </li>\n              ))}\n            </p>\n            <p className={css.text}>Additional information</p>\n\n            <ul>\n              <li className={css.list}>\n                <Link to=\"cast\" state={{ from: location?.state?.from }}>\n                  Cast\n                </Link>\n              </li>\n\n              <li className={css.list}>\n                <Link to=\"reviews\" state={{ from: location?.state?.from }}>\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n            <Suspense>\n              <Outlet />\n            </Suspense>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["getApi","axios","baseURL","params","api_key","getTrending","get","data","results","getMoviesById","id","response","searchApi","movieCastsApi","movieReviewApi","useState","movieItem","setMovieItem","movieId","useParams","location","useLocation","useEffect","getMovie","to","state","from","className","css","original_title","release_data","src","poster_path","width","alt","popularity","overview","genres","map","genre","name","Suspense"],"sourceRoot":""}